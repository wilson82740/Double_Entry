<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.PatientMapper">
  <resultMap id="BaseResultMap" type="model.Patient">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="PROTOCOLID" jdbcType="DECIMAL" property="protocolid" />
    <result column="PATIENTID" jdbcType="DECIMAL" property="id" />
    <result column="MRN" jdbcType="VARCHAR" property="mrn" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <collection property="studyEvents" ofType="model.StudyEvent">
        <result column="STUDY_EVENTID" jdbcType="DECIMAL" property="id" />
        <result column="EVENT_NAME" jdbcType="VARCHAR" property="name" />
        <result column="VISITDATE" jdbcType="DATE" property="visitDate" />
        <result column="VISITID" jdbcType="VARCHAR" property="visitId" />
        <result column="EVENTORDER" jdbcType="DECIMAL" property="eventOrder" />
    </collection>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="noStudyEventByPrimaryKey" parameterType="model.PatientExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select PROTOCOL_PATIENT.PROTOCOLID AS PROTOCOLID, PATIENT.PATIENTID, PATIENT.MRN, PATIENT.LAST_NAME, PATIENT.FIRST_NAME
    from PROTOCOL_PATIENT
    INNER JOIN PATIENT ON PATIENT.PATIENTID = PROTOCOL_PATIENT.PATIENTID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="hasStudyEventByPrimaryKey" parameterType="model.PatientExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select PROTOCOL_PATIENT.PROTOCOLID AS PROTOCOLID, PATIENT.PATIENTID, PATIENT.MRN, PATIENT.LAST_NAME, PATIENT.FIRST_NAME,
    STUDYEVENTDEF.ID STUDY_EVENTID, STUDYEVENTDEF.NAME EVENT_NAME, VISIT.VISITDATE, VISIT.ID VISITID, STUDYEVENTDEF.EVENTORDER
    from PROTOCOL_PATIENT
    INNER JOIN PATIENT ON PATIENT.PATIENTID = PROTOCOL_PATIENT.PATIENTID
    INNER JOIN STUDYPLAN ON STUDYPLAN.PROTOCOLID = PROTOCOL_PATIENT.PROTOCOLID
    INNER JOIN STUDYEVENTDEF ON STUDYEVENTDEF.STUDYPLANID = STUDYPLAN.ID
    LEFT JOIN VISIT ON VISIT.PCLPATIENTID = PROTOCOL_PATIENT.ID AND VISIT.STUDYEVENTDEFID = STUDYEVENTDEF.ID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- <select id="selectByProtocolId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    
      /*WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.*/
    
    select PROTOCOL_PATIENT.PROTOCOLID AS PROTOCOLID, PATIENT.PATIENTID, PATIENT.MRN, PATIENT.LAST_NAME, PATIENT.FIRST_NAME
    from PROTOCOL_PATIENT
    INNER JOIN PATIENT ON PATIENT.PATIENTID = PROTOCOL_PATIENT.PATIENTID
    where PROTOCOL_PATIENT.PROTOCOLID = #{protocolid,jdbcType=DECIMAL}
  </select> -->
  
  <select id="selectByProtocolId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SELECT a.PATIENTID, a.PROTOCOLID PROTOCOLID, b.MRN, b.LAST_NAME, b.FIRST_NAME
    FROM PROTOCOL_PATIENT a 
    INNER JOIN PATIENT b ON b.PATIENTID = a.PATIENTID 
    WHERE a.PROTOCOLID = #{protocolid,jdbcType=DECIMAL} ORDER BY b.MRN
  </select>
 </mapper>